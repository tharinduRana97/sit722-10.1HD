#
# GitHub Actions workflow.
#
# Deploys RabbitMQ and MongoDB database.
#

name: Deploy infrastructure

on:
  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v3

      # Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change this to your desired AWS region
      #
      # Installs Kubectl and connects it to the cluster.
      #
      # https://github.com/marketplace/actions/kubernetes-cli-kubectl
      #
       # Retrieve KUBE_CONFIG from AWS Secrets Manager
      - name: Retrieve base64-encoded KUBE_CONFIG from AWS Secrets Manager
        id: fetch-kube-config
        run: |
          BASE64_KUBE_CONFIG=$(aws secretsmanager get-secret-value --secret-id @kubeconfig --query 'SecretString' --output text | jq -r '.KUBE_CONFIG')
          echo "KUBE_CONFIG=$BASE64_KUBE_CONFIG" >> $GITHUB_ENV

      # Use the kubectl action with the base64-encoded KUBE_CONFIG
      - name: Kubectl Action
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ env.KUBE_CONFIG }}
          kubectl-version: v1.24.2

      #
      # Deploys MongoDB.
      #
      - name: Deploy MongoDB
        run: kubectl apply -f ./scripts/mongodb.yaml

      #
      # Deploys RabbitMQ.
      #
      - name: Deploy Rabbit
        run: kubectl apply -f ./scripts/rabbit.yaml
